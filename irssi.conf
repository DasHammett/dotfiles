servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6697";
    use_tls = "yes";
  },
  { address = "irc.gnome.org"; chatnet = "GIMPNet"; port = "6667"; },
  { address = "irc.ptlink.net"; chatnet = "PTlink"; port = "6667"; },
  { 
    address = "irc.sorcery.net";
    chatnet = "SorceryNet";
    port = "6667";
  },
  { 
    address = "irc.hashmark.net";
    chatnet = "Hashmark";
    port = "6667";
  },
  { address = "irc.ptnet.org"; chatnet = "PTnet"; port = "6667"; },
  { 
    address = "irc.azzurra.org";
    chatnet = "AzzurraNET";
    port = "6667";
  },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.irc-hispano.org";
    chatnet = "irc-hispano";
    port = "6667";
    use_tls = "no";
    tls_verify = "no";
  }
);

chatnets = {
  IRCnet = { type = "IRC"; };
  EFNet = { type = "IRC"; };
  Undernet = { type = "IRC"; };
  DALnet = { type = "IRC"; };
  freenode = { type = "IRC"; };
  GIMPNet = { type = "IRC"; };
  PTlink = { type = "IRC"; };
  SorceryNet = { type = "IRC"; };
  Hashmark = { type = "IRC"; };
  PTnet = { type = "IRC"; };
  AzzurraNET = { type = "IRC"; };
  SILC = { type = "IRC"; };
  "irc-hispano" = { type = "IRC"; nick = "Hammett:Mandrioli0"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "#irssi"; chatnet = "freenode"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "window";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "bantime";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  uq = "unquery";
  whois = "whois $0 $0";
  jal = "j metallica; j master_of_puppets; j hardcore!!!!!; j back_in_black; j metal-zone; j cabezones_del_irc; j radikalboard; j freestylebcn; j catalunya; j esquirol_volador; j mircat; j gunbound;";
  scano = "names -o";
  scan = "names";
  kkwete = "/nick kkwete:bcmfenix1";
  ome = "/msg chan op $C $N";
  ame = "foreach channel /me $-";
  botarraku = "user add $0 $0!*@*;flag $0 +i;/kb $0 You've been shitlisted for being a bot";
  addbot = "user add $0 $0!*@*;flag $0 +i";
  addshitlist = "user add $0 $0*!*@*;flag $0 +n";
  newpass = "/msg nick getnewpass";
  scann = "names -n";
  shoulder = "/say ¯\\\\_(ツ)_/¯";
  "/back" = "/away";
  back = "away";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        niq = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
        blaster = { priority = "-10"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      l33tmusic = { placement = "top"; items = { l33tmusic = { }; }; };
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    dccstat = { items = { dccstat = { }; }; };
    #niq = { };
  };
};
settings = {
  core = {
    real_name = "absolut";
    user_name = "drunk";
    nick = "Hammett";
    timestamp_format = "%H:%M:%S";
    awaylog_level = "none";
    resolve_prefer_ipv6 = "yes";
    quit_message = "I feel like I could... like I could... like I could... TAKE ON THE WORLD!!";
  };
  "fe-common/core" = {
    theme = "qlth";
    use_msgs_window = "no";
    use_status_window = "no";
    autocreate_query_level = "DCCMSGS";
    autolog = "yes";
    autolog_path = "~/irclogs/$0.log";
    hilight_level = "all";
    hilight_nick_matches = "yes";
    show_nickmode_empty = "yes";
    term_charset = "utf-8";
  };
  "perl/core/scripts" = {
    blaster_bar = "off";
    blaster_prefix = "now playing";
    usercount_show_halfops = "no";
    usercount_show_ircops = "yes";
    listen_tagorder = "%ARTIST - %TITLE";
    listen_use_action = "yes";
    sysinfo_nics = "eth0";
    l33tstringplaying = "now playing";
    l33tstringsongformat = "$n";
    sysinfo_nicnames = "Ethernet";
    show_whois_snote = "yes";
    people_default_chatnet = "irc-hispano";
    niq_own_statusbar = "no";
    niq_show_in_statusbar = "yes";
    niq_hide_on_inactive = "yes";
    amarokid_display = "NORMALSAYING TITLE | Album: ALBUM [TIME]";
  };
  "irc/dcc" = {
    dcc_autoresume = "yes";
    dcc_autoget = "no";
    dcc_port = "5000";
    dcc_autoaccept_lowports = "yes";
    dcc_mirc_ctcp = "yes";
    dcc_send_replace_space_with_underscore = "no";
    dcc_download_path = "/home/hammett/Downloads/";
  };
  "fe-text" = { indent = "0"; actlist_sort = "refnum"; };
  "irc/core" = {
    usermode = "+iwn";
    ban_type = "host";
    massjoin_max_joins = "5";
    alternate_nick = "dasdas";
  };
  "fe-common/irc" = { show_away_once = "yes"; };
};
keyboard = (
  { key = "^[[12~"; id = "command"; data = "scano "; },
  { key = "^[[13~"; id = "command"; data = "names -voices -normal"; },
  { key = "^[[15~~"; id = "command"; data = "dcc list"; },
  { key = "^1"; id = "command"; data = "window 1"; }
);
logs = { };
hilights = ( { text = "Hammett"; nick = "yes"; word = "yes"; } );
ignores = (
  { mask = "hamlett_"; level = "ALL"; },
  { mask = "la-salle"; level = "ALL"; },
  { mask = "la-salle2"; level = "ALL"; },
  { mask = "ddd_"; level = "ALL"; },
  { mask = "la-salle2_"; level = "ALL"; },
  { mask = "la--sal*"; level = "ALL"; },
  { mask = "charlas"; level = "ALL"; },
  { mask = "mmx__"; level = "ALL"; },
  { mask = "xavixuuu"; level = "MSGS"; },
  { mask = "lasalle"; level = "ALL"; },
  { mask = "ms_hechos*!*@*"; level = "ALL"; },
  { mask = "VideoChat"; level = "ALL"; },
  { mask = "WB2*!*@*"; level = "ALL"; },
  { mask = "GORDOyCALVO*!*@"; level = "ALL"; },
  { mask = "*!*@*noticias.irc-hispano.org"; level = "ALL"; },
  { mask = "aburrido-58"; level = "ALL"; },
  { mask = "rodney"; level = "ALL"; },
  { level = "ALL"; pattern = "\\w*algun\\w*.*\\?$"; regexp = "yes"; },
  { level = "ALL"; pattern = "\\w*busc\\w*.*\\?$"; regexp = "yes"; },
  { level = "JOINS PARTS QUITS"; channels = ( "#barcelona" ); },
  { mask = "*!d0riPQBkk@*"; level = "ALL"; }
);


notifies = { saiak = { }; kkwete = { away_check = "yes"; }; };
